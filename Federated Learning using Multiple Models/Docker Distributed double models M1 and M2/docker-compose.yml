services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: flwr_server
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./performance:/app/performance
    networks:
      - flwr_network
    deploy:
      resources:
        limits:
          cpus: '0.5'   

  clienta:
    build:
      context: .
      dockerfile: Dockerfile.clienta
    depends_on:
      - server
    networks:
      - flwr_network
    volumes:
      - ./data:/app/data
      - ./performance:/app/performance
    deploy:
      resources:
        limits:
          cpus: '1.5'
    command: sh -c "sleep 2 && python clienta.py"

  clientb:
    build:
      context: .
      dockerfile: Dockerfile.clientb
    depends_on:
      - server
    networks:
      - flwr_network
    volumes:
      - ./data:/app/data
      - ./performance:/app/performance
    deploy:
      resources:
        limits:
          cpus: '1.5'
    command: sh -c "sleep 2 && python clientb.py"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - flwr_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=error
    networks:
      - flwr_network
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./config/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./config/provisioning/dashboards:/etc/grafana/provisioning/dashboards

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - flwr_network
    command:
      - '--log.level=error'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro 
    networks:
      - flwr_network

networks:
  flwr_network:
    driver: bridge

volumes:
  grafana_data:
    driver: local